#BlueJ class context
comment0.target=MafiaCountry
comment0.text=\r\n\ A\ mafiacountry\ represents\ a\ country,but\ each\ time\ you\ visit\ a\ city\ inside\ the\ country\ you\ risk\ getting\ robbed\!\ The\ mafiacountry\ has\ a\ name\ and\ is\ a\r\n\ collection\ of\ cities\ and\ roads\ between\ them,\ all\ part\ of\ a\ game.\ \r\n\r\n\ \ @author\ Jens\ Kristian\ &\ Thomas\ \ Vinther\r\n\ \ @version\ Computergame\ 3\r\n
comment1.params=name\ network
comment1.target=MafiaCountry(java.lang.String,\ java.util.Map)
comment1.text=\r\n\ Creates\ a\ new\ mafiaCountry\ with\ the\ name\ of\ the\ mafia\ ountry\ and\ a\ network\ (a\ map)\ which\ links\ a\ city\ to\ the\ list\ of\ all\ roads\ starting\ in\ \r\n\ that\ particular\ city.\ \r\n\ @param\ name\ \ \ \ \ \ name\ of\ the\ mafia\ country\r\n\ @param\ network\ \ \ network\ of\ cities\ and\ roads\ within\ the\ mafia\ country\r\n
comment2.params=value
comment2.target=int\ bonus(int)
comment2.text=\r\n\ When\ a\ player\ visits\ a\ city\ in\ a\ mafia\ country\ they\ are\ robbed\ with\ chance\ determined\ by\ the\ games\ settings\r\n\ if\ they\ are\ robbed\ we\ return\ a\ loss\ determined\ by\ the\ getLoss\ method\ in\ the\ Game\ class\r\n\ if\ they\ are\ not\ robbed\ we\ return\ the\ bonus\ as\ if\ the\ mafia\ country\ is\ a\ regular\ country.\r\n\ On\ average\ we\ get\ (1-risk)/100*E[random(0,value)]+risk/100*E[random(minRoberry,maxRobbery)]\r\n\ P(X\ \=\ super.bonus(value))\ \=\ 1-risk/100\r\n\ P(X\=-getGame().getLoss())\ \=\ risk/100\r\n\ \r\n\ @param\ value\ the\ value\ used\ in\ calculations\r\n\ @return\ \ \ \ \ \ A\ positive\ integer\ in\ [\r\n
numComments=3
