#BlueJ class context
comment0.target=TestBrick2
comment0.text=\r\n\ This\ class\ tests\ the\ Brick\ drivers\ license\ exam\r\n\ Introduktion\ til\ Programmering,\ 2017\r\n\r\n\ @author\ Nikolaj\ Ignatieff\ Schwartzbach\r\n\ @author\ Kristian\ Cordes-Andersen\r\n\ @version\ 28/09/2017\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Run\ the\ main\ method\ from\ shell\r\n
comment2.params=
comment2.target=void\ testBrick()
comment2.text=\r\n\ Tests\ the\ Brick\ class\r\n
comment3.params=
comment3.target=boolean\ testToString()
comment3.text=\r\n\ Tests\ that\ toString\ works\ as\ expected\r\n\ Will\ report\ errors\ to\ System.out\r\n\ @return\ whether\ the\ test\ was\ successful\ or\ not.\r\n
comment4.params=
comment4.target=boolean\ testWeight()
comment4.text=\r\n\ Tests\ weight(String\ color)\r\n
comment5.params=
comment5.target=boolean\ testHeaviest()
comment5.text=\r\n\ Tests\ heaviest()\r\n\ @return\ whether\ the\ test\ was\ successful\ or\ not.\r\n
comment6.params=
comment6.target=boolean\ testPrintLegoBox()
comment6.text=\r\n\ Tests\ the\ natural\ ordering\ of\ the\ Brick\ class\r\n\ Will\ report\ errors\ to\ System.out\r\n\ @return\ whether\ the\ test\ was\ successful\ or\ not.\r\n
comment7.params=msg\ exp\ rec
comment7.target=void\ printError(java.lang.String,\ java.lang.Object,\ java.lang.Object)
comment7.text=\r\n\ Formats\ the\ error\ message\ to\ be\ printed.\r\n\ Prints\ to\ System.err\r\n\ @param\ msg\ the\ message\ (usually\ the\ method\ name)\r\n\ @param\ exp\ the\ expected\ value\r\n\ @param\ rec\ the\ received\ value\r\n
comment8.params=object
comment8.target=Brick\ unwrap(java.lang.Object)
comment8.text=\r\n\ Unwraps\ a\ given\ Optional\ to\ the\ Animal-object.\r\n\ This\ is\ done\ to\ allow\ for\ handling\ assignments\ written\ using\ functional\ programming.\r\n\ @param\ object\ the\ object\ returned\ by\ the\ students\ method\r\n\ @return\ the\ unwrapped\ object\ of\ type\ Animal,\ null\ if\ object\ is\ not\ an\ Animal\ or\ Optional<Animal>\r\n
comment9.params=input
comment9.target=java.lang.Comparable[]\ getComparables(java.lang.Object[])
comment9.text=\r\n\ This\ method\ converts\ an\ array\ of\ objects\ into\ an\ array\ of\ their\ corresponding\ Comparables.\r\n\ If\ T\ does\ not\ implement\ Comparable<T>,\ this\ method\ will\ throw\ an\ error.\r\n\ This\ function\ is\ used\ to\ ensure\ our\ test\ always\ compiles,\ even\ in\ absense\ of\ the\ method\ compareTo.\r\n\ @param\ input\ An\ array\ of\ class\ T\r\n\ @return\ An\ array\ of\ Comparable<T>,\ if\ T\ implements\ Comparable<T>;\ otherwise\ an\ error.\r\n
numComments=10
