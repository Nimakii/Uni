#BlueJ class context
comment0.target=Country
comment0.text=\r\n\ A\ Contry\ is\ a\ collection\ of\ cities\ and\ roads\ between\ them,\ all\ part\ of\ a\ game.\r\n\r\n\ @author\ Jens\ Kristian\ Nielsen\ &\ Thomas\ Vinther\r\n\ @version\ Computerspil2\r\n
comment1.params=name\ network
comment1.target=Country(java.lang.String,\ java.util.Map)
comment1.text=\r\n\ Creates\ a\ new\ \ \ \ Country\ object.\r\n\ @param\ name\ \ \ \ \ \ Name\ of\ the\ Country.\r\n\ @param\ network\ \ \ Network\ of\ cities\ and\ roads\ within\ the\ country.\r\n
comment10.params=value
comment10.target=int\ bonus(int)
comment10.text=\r\n\ Calculates\ a\ random\ integer\ based\ upon\ the\ Random\ implemented\ in\ the\ Game\ Class.\r\n\ \r\n\ @param\ value\ the\ value\ used\ in\ calculations.\r\n\ @return\ \ \ \ \ \ a\ random\ value\ based\ upon\ the\ value\ paramater\ and\ the\ implementation\ of\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ random\ in\ the\ Game\ class.\r\n
comment11.params=a\ b\ length
comment11.target=void\ addRoads(City,\ City,\ int)
comment11.text=\r\n\ Adds\ roads\ starting\ in\ the\ given\ two\ cities,\ if\ and\ only\ if\ they\ lie\ within\ this\ Country\r\n\ and\ ending\ in\ the\ other\ City.\ With\ distance\ length.\r\n\ \r\n\ @param\ City\ a\ \ \ \ \ \ \ \ The\ first\ City.\r\n\ @param\ City\ b\ \ \ \ \ \ \ \ The\ second\ City.\r\n\ @param\ int\ length\ \ \ \ The\ potential\ distance\ between\ them.\r\n
comment12.params=city
comment12.target=Position\ position(City)
comment12.text=\r\n\ This\ method\ creates\ a\ Position\ object\ with\ the\ paramaters\ city,\ city\ and\ 0.\ To\ represent\r\n\ the\ position\ of\ the\ city.\r\n\ \r\n\ @param\ city\ \ \ \ \ \ \ \ \ \ The\ City\ we\ wish\ to\ create\ a\ position.\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ position\ of\ the\ city.\r\n
comment13.params=from\ to
comment13.target=Position\ readyToTravel(City,\ City)
comment13.text=\r\n\ We\ wish\ to\ check\ if\ there\ is\ a\ road\ from\ the\ City\ from,\ to\ the\ City\ to,\ and\ if\ there\ is\ \r\n\ we\ return\ a\ Position\ object\ representing\ our\ readiness\ to\ travel.\ If\ we\ get\ a\r\n\ Position(from,to,length)\ object\ we\ have\ begun\ the\ journey\ from\ from\ to\ to,\ and\ have\r\n\ taken\ 0\ steps.\r\n\ If\ we\ get\ a\ Position(from,from,0)\ object\ we\ cannot\ travel\ from\ from\ to\ to.\r\n\ \r\n\ @param\ City\ from\ \ \ \ \ The\ City\ we\ wish\ to\ travel\ from\r\n\ @param\ City\ to\ \ \ \ \ \ \ The\ City\ we\ wish\ to\ travel\ to\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ position\ object\ that\ represents\ our\ new\ position\r\n
comment2.params=
comment2.target=Game\ getGame()
comment2.text=\r\n\ Returns\ a\ reference\ to\ the\ Game\ that\ we\ are\ playing.\r\n\ \r\n\ @return\ \ \ \ \ \ a\ pointer\ to\ the\ Game\ this\ country\ is\ a\ part\ of.\r\n
comment3.params=game
comment3.target=void\ setGame(Game)
comment3.text=\r\n\ Sets\ the\ game\ this\ country\ is\ a\ part\ of.\r\n\ \r\n\ @param\ game\ \ The\ game\ we\ wish\ this\ country\ to\ partake\ in.\r\n
comment4.params=
comment4.target=java.lang.String\ getName()
comment4.text=\r\n\ Returns\ the\ name\ of\ the\ country.\r\n\ \r\n\ @return\ \ \ \ \ the\ countrys\ name.\r\n
comment5.params=
comment5.target=java.util.Map\ getNetwork()
comment5.text=\r\n\ Returns\ the\ infrastructure\ network\ of\ the\ Country,\ a\ Map\ that\ maps\ a\ City\ to\ a\ List\ of\r\n\ Road\ objects.\r\n\ \r\n\ @return\ \ \ \ \ \ the\ network\ field\ variable.\r\n
comment6.params=c
comment6.target=java.util.List\ getRoads(City)
comment6.text=\r\n\ Returns\ the\ list\ of\ Roads\ starting\ in\ the\ given\ City,\ if\ and\ only\ if\ the\ City\ lies\r\n\ within\ the\ borders\ of\ the\ Country.\r\n\ \r\n\ @param\ c\ \ \ \ \ The\ City\ whos\ list\ of\ Roads\ we\ wish\ to\ get.\r\n\ @return\ \ \ \ \ \ The\ list\ of\ roads\ starting\ in\ City\ c.\r\n
comment7.params=
comment7.target=java.util.List\ getCities()
comment7.text=\r\n\ Returns\ the\ list\ of\ cities\ within\ the\ country.\r\n\ \r\n\ @return\ \ \ \ \ \ List\ of\ cities.\r\n
comment8.params=name
comment8.target=City\ getCity(java.lang.String)
comment8.text=\r\n\ Returns\ a\ City\ with\ the\ given\ name,\ or\ null\ if\ no\ such\ city\ exists\ within\ the\ Country.\r\n\ \r\n\ @param\ name\ \ Name\ we\ wish\ to\ search\ for.\r\n\ @return\ \ \ \ \ \ City\ with\ name\ name.\r\n
comment9.params=
comment9.target=void\ reset()
comment9.text=\r\n\ Resets\ all\ cities\ within\ the\ Country.\r\n
numComments=14
